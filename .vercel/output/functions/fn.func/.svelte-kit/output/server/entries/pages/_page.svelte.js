import { c as create_ssr_component, g as add_attribute, e as escape, i as each } from "../../chunks/ssr.js";
import "../../chunks/client.js";
import "../../chunks/Toaster.svelte_svelte_type_style_lang.js";
const css = {
  code: "button.svelte-1eomhbe.svelte-1eomhbe{box-shadow:var(--shadow-6);width:var(--size-fluid-8);height:var(--size-fluid-8);border-radius:var(--radius-blob-1);background-image:var(--gradient-25);color:var(--gray-9);font-size:1.2rem;text-shadow:none;transition:transform 0.2s}button.svelte-1eomhbe.svelte-1eomhbe:hover{transform:scale(1.1)}button.svelte-1eomhbe.svelte-1eomhbe:active{transform:scale(0.9)}form.svelte-1eomhbe.svelte-1eomhbe{display:flex;flex-direction:column;align-items:center}h1.svelte-1eomhbe.svelte-1eomhbe{text-align:center;cursor:move}.stats.svelte-1eomhbe.svelte-1eomhbe{width:100%;display:flex;flex-wrap:wrap;justify-content:center;gap:1rem}.average.svelte-1eomhbe.svelte-1eomhbe{background-color:var(--gray-8);border-radius:var(--radius-3);padding:var(--size-3);box-shadow:var(--shadow-3);border:0.5px solid var(--gray-5);width:200px;cursor:move}.average.svelte-1eomhbe p.svelte-1eomhbe{color:var(--gray-5);text-transform:uppercase;font-weight:500;font-size:0.8rem}.average.svelte-1eomhbe h2.svelte-1eomhbe{font-size:var(--font-size-fluid-3)}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { enhance } from \\"$app/forms\\";\\nimport { toast } from \\"svelte-french-toast\\";\\nimport { draggable } from \\"@neodrag/svelte\\";\\nexport let data;\\nlet start_time;\\nlet duration = 0;\\nlet pointer_type = \\"\\";\\nfunction onDown(e) {\\n  start_time = performance.now();\\n  pointer_type = e.pointerType;\\n}\\nfunction onUp() {\\n  duration = performance.now() - start_time;\\n}\\n<\/script>\\n\\n<form\\n\\tuse:enhance={() => {\\n\\t\\treturn async ({ update, result }) => {\\n\\t\\t\\tawait update();\\n\\n\\t\\t\\t// @ts-ignore\\n\\t\\t\\tresult.data.success ? toast.success(result.data.message) : toast.error(result.data.message);\\n\\t\\t};\\n\\t}}\\n\\tmethod=\\"post\\"\\n>\\n\\t<h1 use:draggable>How long does a click take?</h1>\\n\\n\\t<br /><br />\\n\\n\\t<input type=\\"hidden\\" name=\\"duration\\" value={duration} />\\n\\t<input type=\\"hidden\\" name=\\"pointer-type\\" value={pointer_type} />\\n\\n\\t<button type=\\"submit\\" on:pointerdown={onDown} on:pointerup={onUp}> Click me ðŸ¦„ </button>\\n</form>\\n\\n<hr />\\n\\n<section class=\\"stats\\">\\n\\t<div class=\\"average\\" use:draggable>\\n\\t\\t<p>Average</p>\\n\\t\\t<h2>{Math.floor(data.average.average_duration)}</h2>\\n\\t\\t{data.average.count} clicks\\n\\t</div>\\n\\n\\t{#each data.category_average as { pointer_type, average_duration, count }}\\n\\t\\t<div class=\\"average\\" use:draggable>\\n\\t\\t\\t<p>{pointer_type}</p>\\n\\t\\t\\t<h2>{Math.floor(average_duration)}</h2>\\n\\t\\t\\t{count}\\n\\t\\t</div>\\n\\t{/each}\\n</section>\\n\\n<style>\\n\\tbutton {\\n\\t\\tbox-shadow: var(--shadow-6);\\n\\n\\t\\twidth: var(--size-fluid-8);\\n\\t\\theight: var(--size-fluid-8);\\n\\t\\tborder-radius: var(--radius-blob-1);\\n\\n\\t\\tbackground-image: var(--gradient-25);\\n\\t\\tcolor: var(--gray-9);\\n\\t\\tfont-size: 1.2rem;\\n\\t\\ttext-shadow: none;\\n\\n\\t\\ttransition: transform 0.2s;\\n\\t}\\n\\n\\tbutton:hover {\\n\\t\\ttransform: scale(1.1);\\n\\t}\\n\\n\\tbutton:active {\\n\\t\\ttransform: scale(0.9);\\n\\t}\\n\\n\\tform {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t}\\n\\n\\th1 {\\n\\t\\ttext-align: center;\\n\\t\\tcursor: move;\\n\\t}\\n\\n\\t.stats {\\n\\t\\twidth: 100%;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-wrap: wrap;\\n\\t\\tjustify-content: center;\\n\\t\\tgap: 1rem;\\n\\t}\\n\\n\\t.average {\\n\\t\\tbackground-color: var(--gray-8);\\n\\t\\tborder-radius: var(--radius-3);\\n\\t\\tpadding: var(--size-3);\\n\\t\\tbox-shadow: var(--shadow-3);\\n\\t\\tborder: 0.5px solid var(--gray-5);\\n\\t\\twidth: 200px;\\n\\t\\tcursor: move;\\n\\t}\\n\\n\\t.average p {\\n\\t\\tcolor: var(--gray-5);\\n\\t\\ttext-transform: uppercase;\\n\\t\\tfont-weight: 500;\\n\\t\\tfont-size: 0.8rem;\\n\\t}\\n\\n\\t.average h2 {\\n\\t\\tfont-size: var(--font-size-fluid-3);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAwDC,oCAAO,CACN,UAAU,CAAE,IAAI,UAAU,CAAC,CAE3B,KAAK,CAAE,IAAI,cAAc,CAAC,CAC1B,MAAM,CAAE,IAAI,cAAc,CAAC,CAC3B,aAAa,CAAE,IAAI,eAAe,CAAC,CAEnC,gBAAgB,CAAE,IAAI,aAAa,CAAC,CACpC,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,IAAI,CAEjB,UAAU,CAAE,SAAS,CAAC,IACvB,CAEA,oCAAM,MAAO,CACZ,SAAS,CAAE,MAAM,GAAG,CACrB,CAEA,oCAAM,OAAQ,CACb,SAAS,CAAE,MAAM,GAAG,CACrB,CAEA,kCAAK,CACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MACd,CAEA,gCAAG,CACF,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IACT,CAEA,oCAAO,CACN,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,MAAM,CACvB,GAAG,CAAE,IACN,CAEA,sCAAS,CACR,gBAAgB,CAAE,IAAI,QAAQ,CAAC,CAC/B,aAAa,CAAE,IAAI,UAAU,CAAC,CAC9B,OAAO,CAAE,IAAI,QAAQ,CAAC,CACtB,UAAU,CAAE,IAAI,UAAU,CAAC,CAC3B,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,CACjC,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IACT,CAEA,uBAAQ,CAAC,gBAAE,CACV,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MACZ,CAEA,uBAAQ,CAAC,iBAAG,CACX,SAAS,CAAE,IAAI,mBAAmB,CACnC"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  let duration = 0;
  let pointer_type = "";
  if ($$props.data === void 0 && $$bindings.data && data !== void 0)
    $$bindings.data(data);
  $$result.css.add(css);
  return `<form method="post" class="svelte-1eomhbe"><h1 class="svelte-1eomhbe" data-svelte-h="svelte-1wdixz6">How long does a click take?</h1> <br><br> <input type="hidden" name="duration"${add_attribute("value", duration, 0)}> <input type="hidden" name="pointer-type"${add_attribute("value", pointer_type, 0)}> <button type="submit" class="svelte-1eomhbe" data-svelte-h="svelte-smjdyf">Click me ðŸ¦„</button></form> <hr> <section class="stats svelte-1eomhbe"><div class="average svelte-1eomhbe"><p class="svelte-1eomhbe" data-svelte-h="svelte-7vx2zb">Average</p> <h2 class="svelte-1eomhbe">${escape(Math.floor(data.average.average_duration))}</h2> ${escape(data.average.count)} clicks</div> ${each(data.category_average, ({ pointer_type: pointer_type2, average_duration, count }) => {
    return `<div class="average svelte-1eomhbe"><p class="svelte-1eomhbe">${escape(pointer_type2)}</p> <h2 class="svelte-1eomhbe">${escape(Math.floor(average_duration))}</h2> ${escape(count)} </div>`;
  })} </section>`;
});
export {
  Page as default
};
